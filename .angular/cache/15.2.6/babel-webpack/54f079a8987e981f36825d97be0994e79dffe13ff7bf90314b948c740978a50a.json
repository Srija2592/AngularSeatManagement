{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class BookseatService {\n  constructor() {\n    this.dataStore = {\n      seatChart: [{\n        row: 1,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 1,\n        rowbooked_seats: []\n      }, {\n        row: 2,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 8,\n        rowbooked_seats: []\n      }, {\n        row: 3,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 15,\n        rowbooked_seats: []\n      }, {\n        row: 4,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 22,\n        rowbooked_seats: []\n      }, {\n        row: 5,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 29,\n        rowbooked_seats: []\n      }, {\n        row: 6,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 36,\n        rowbooked_seats: []\n      }, {\n        row: 7,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 43,\n        rowbooked_seats: []\n      }, {\n        row: 8,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 50,\n        rowbooked_seats: []\n      }, {\n        row: 9,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 57,\n        rowbooked_seats: []\n      }, {\n        row: 10,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 64,\n        rowbooked_seats: []\n      }, {\n        row: 11,\n        rowbooked: 0,\n        rowmax: 7,\n        rowstart: 71,\n        rowbooked_seats: []\n      }, {\n        row: 12,\n        rowbooked: 0,\n        rowmax: 3,\n        rowstart: 78,\n        rowbooked_seats: []\n      }],\n      total: 80,\n      booked: 0,\n      remaining: 0\n    };\n    this.bookings = [];\n    this._data = new BehaviorSubject(this.dataStore);\n  }\n  get data() {\n    return this._data.asObservable();\n  }\n  bookseats(seatstobook) {\n    let remaining = seatstobook;\n    let bookedseats = [];\n    for (let row of this.dataStore.seatChart) {\n      if (remaining == 0) {\n        break;\n      }\n      const rowBookings = Math.min(row.rowmax - row.rowbooked, remaining);\n      remaining -= rowBookings;\n      const bs = row.rowbooked_seats;\n      let count = 0;\n      for (let i = row.rowstart; i <= row.rowstart + row.rowmax; i++) {\n        if (count == rowBookings) {\n          break;\n        }\n        const alreadyBooked = bs.some(n => n === i);\n        if (!alreadyBooked) {\n          count++;\n          bs.push(i);\n          bookedseats.push(i);\n        }\n      }\n    }\n    this.dataStore.booked += seatstobook;\n    this.dataStore.remaining = this.dataStore.total - seatstobook;\n    return [bookedseats, this.dataStore.remaining];\n  }\n  updatedata(seats) {\n    for (let i of seats) {\n      let row = 1 + i; //7;\n      let pos = i % 7;\n      //this.dataStore.booked+=1;\n      //this.dataStore.remaining-=1;\n      this.dataStore.seatChart[row].rowbooked += 1;\n      this.dataStore.seatChart[row].rowbooked_seats.push(i);\n    }\n  }\n}\nBookseatService.ɵfac = function BookseatService_Factory(t) {\n  return new (t || BookseatService)();\n};\nBookseatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookseatService,\n  factory: BookseatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","BookseatService","constructor","seatChart","row","rowbooked","rowmax","rowstart","rowbooked_seats","total","booked","remaining","dataStore","data","_data","asObservable","bookseats","seatstobook","bookedseats","rowBookings","Math","min","bs","count","i","alreadyBooked","some","n","push","updatedata","seats","pos","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\s.srija\\SeatManagement\\src\\app\\bookseat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ntype SEAT_ROW = {\n  row: number;\n  rowbooked: number;\n  rowmax: number;\n  rowstart: number;\n  rowbooked_seats: number[];\n};\n\ntype DATASTORE = {\n  seatChart: SEAT_ROW[];\n  total: number;\n  booked: number;\n  remaining: number;\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookseatService {\n\n  constructor() { }\n  private dataStore: DATASTORE = {\n    seatChart: [\n      { row: 1, rowbooked: 0, rowmax: 7, rowstart: 1, rowbooked_seats: [] },\n      { row: 2, rowbooked: 0, rowmax: 7, rowstart: 8, rowbooked_seats: [] },\n      { row: 3, rowbooked: 0, rowmax: 7, rowstart: 15, rowbooked_seats: [] },\n      { row: 4, rowbooked: 0, rowmax: 7, rowstart: 22, rowbooked_seats: [] },\n      { row: 5, rowbooked: 0, rowmax: 7, rowstart: 29, rowbooked_seats: [] },\n      { row: 6, rowbooked: 0, rowmax: 7, rowstart: 36, rowbooked_seats: [] },\n      { row: 7, rowbooked: 0, rowmax: 7, rowstart: 43, rowbooked_seats: [] },\n      { row: 8, rowbooked: 0, rowmax: 7, rowstart: 50, rowbooked_seats: [] },\n      { row: 9, rowbooked: 0, rowmax: 7, rowstart: 57, rowbooked_seats: [] },\n      { row: 10, rowbooked: 0, rowmax: 7, rowstart: 64, rowbooked_seats: [] },\n      { row: 11, rowbooked: 0, rowmax: 7, rowstart: 71, rowbooked_seats: [] },\n      { row: 12, rowbooked: 0, rowmax: 3, rowstart: 78, rowbooked_seats: [] }\n    ],\n    total: 80,\n    booked: 0,\n    remaining: 0\n  };\n  bookings=[];\n  private _data = new BehaviorSubject<DATASTORE>(this.dataStore);\n  get data() {\n    return this._data.asObservable();\n  }\n\n\n  bookseats(seatstobook:any){\n    let remaining=seatstobook;\n    let bookedseats=[];\n    for(let row of this.dataStore.seatChart){\n      if(remaining==0){\n        break;\n      }\n      const rowBookings=Math.min(row.rowmax-row.rowbooked,remaining);\n      remaining-=rowBookings;\n      const bs=row.rowbooked_seats;\n      let count=0;\n      for(let i=row.rowstart;i<=row.rowstart+row.rowmax;i++){\n        if(count==rowBookings){\n          break;\n        }\n        const alreadyBooked=bs.some(n=>n===i);\n        if(!alreadyBooked){\n          count++;\n          bs.push(i);\n          bookedseats.push(i);\n        }\n      }\n    }\n    this.dataStore.booked+=seatstobook;\n    this.dataStore.remaining=this.dataStore.total-seatstobook;\n    return [bookedseats,this.dataStore.remaining];\n  }\n\n  updatedata(seats:any){\n    for(let i of seats){\n      let row=1+i//7;\n      let pos=i%7;\n      //this.dataStore.booked+=1;\n      //this.dataStore.remaining-=1;\n      this.dataStore.seatChart[row].rowbooked+=1;\n      this.dataStore.seatChart[row].rowbooked_seats.push(i);\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}